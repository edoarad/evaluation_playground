#%%

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import matplotlib as mpl
import seaborn as sns
import scipy

sns.set_style("whitegrid")
sns.set_context(rc = {'patch.linewidth': 0.0})


# %%

# fig, ax = plt.subplots()

# data = np.random.lognormal(0, 2, 1000)


datas = [
    np.array([3,4,6,7,7,9,10,11,14,15,15,15,17,19,20,21,22,22,37,37,37,39,39,42,47,47,48,57,68,73,81,82,84,86,87,88,89,102,117,120,121,129,136,141,147,149,150,156,159,160,183,192,197,207,225,284,301,318,345,353,396,398,404,409,587,631,642,671,673,688,733,734,789,838,922,924,930,1062,1132,1377,1411,1440,1458,1699,1937,1977,2028,2128,2449,2566,2617,2712,3027,3113,4185,4417,4530,6269,9834,11920,12632,13158,15869,23520,31114,36793,52449]),
    np.array([9,5,22.5,10,9,15,16,17,52.5,27.5,38,18,26,26,28,58.5,56,213,52.5,297.5,50,69,72.5,63,72,82,77.5,87,93,114,158,135,378,140,171.5,222,230,247,260,264,284.5,274,279,351.5,324,355,376.5,430,437,449.5,563.5,770,914,2668,1063,1186,1373,1500.5,1605,1680,1838,2138.5,2750,5718,3578,5508,3234,5,30,32.5,69.5,60,77,82,95,96,103,103,157.5,153,190,225,305,310,350,353,575,568,568,568,2018,2018,2100,2200,2900,2910]),
    np.array([4,4,4,4,4,4,3,530,444,376,19,21,32,82,34,556,596,2010,1977,4,4,4,4,4,4,5,8,13,5,8,12,16,18,19,19,30,66,70,205,217,58,62,204,218,55,60,203,216,64,68,203,216,56,61,221,235,9,10,12,13,22,9,16,28,18,20,21,25,23,24,22,66,70,220,233,7,8,11,15,22,24,28,13,15,19,60,61,61,27,64,63,6,10,8,11,7,11,9,13,8,13,11,15,41,352,41,29,17,16,12,39,31,34,28,40,36,35,32,33,31,48,41,41,42,391,40,32,20,18,14,39,39,34,35,40,36,35,32,32,31,47,40,40,49,596,40,49,30,27,21,46,49,39,43,44,38,37,34,34,36,50,41,41,79,64,74,109,121,139,62,72,87,52,168,260,41,34,32,42340,42460,42680,22320,22428,22649,120,117,122,82,60,55,83,93,108,24,20,19,66,73,86,61,73,90,341,348,391,89,98,112,49,55,65,81,90,120,92,108,54,64,78,84,95,112,71,81,107,72,80,93,150,170,206,235,246,262,273,282,309,80,91,111,88,99,130,284,296,327,47,38,35,68,74,85,65,74,89,142,170,197,88,96,109,54,57,66,81,90,118,82,92,106,57,65,78,83,94,110,72,81,106,73,80,92,123,145,176,224,238,255,256,270,298,80,90,108,87,98,127,266,284,316,47,41,38,65,71,81,62,70,84,102,122,140,83,92,105,54,57,65,78,87,114,79,89,103,56,64,76,80,91,107,70,80,104,71,78,90,103,125,151,212,229,247,239,258,286,75,86,103,84,96,124,248,271,303,55,48,45,69,73,83,67,73,86,106,123,139,85,93,106,57,59,67,80,88,114,81,90,104,59,66,78,82,92,107,72,81,104,73,79,91,106,125,150,210,228,245,235,256,283,78,88,104,86,96,124,245,268,301,8,10,51,12,63,80,37,1,33,98,205,54,36,642,15,14,14,30,27,45,34,38,42,34,47,50,44,65,8,30,31,36,37,40,41,10,9,11,9,11,10,10,15,11,22,16,16,20,21,24,17,10,21,21,10,24,23,21,21,21,23,26,17,24,26,25,24,27,27,27,28,28,29,16,16,15,17,16,21,20,20,20,18,16,21,18,18,20,26,26,27,8,10,65,16,81,102,38,1,36,107,251,60,43,793,19,18,17,32,29,50,35,41,46,37,52,55,49,71,7,33,34,38,41,42,45,11,11,13,9,12,12,11,16,12,21,17,17,21,22,25,18,10,22,22,12,24,24,21,22,21,24,27,18,24,27,26,25,29,28,28,30,29,30,17,16,15,19,17,22,20,21,20,19,16,22,18,18,20,27,26,27,9,11,99,22,117,146,42,1,41,128,387,77,63,1235,25,24,23,36,33,62,39,48,56,44,66,69,61,87,7,39,39,44,48,48,54,13,15,18,11,14,14,12,18,15,24,20,19,24,26,29,20,12,25,26,14,28,27,23,24,24,28,32,20,28,32,30,29,34,33,34,35,34,36,19,18,17,21,19,25,23,24,23,22,18,26,20,19,22,30,30,32,25,19,25,26,30,398,656,97,92,87,119,106,445,90,246,177,215,85,41,33,1782,410,672,5637,94,165,117,63,137,183,616,108,458,541,11305,208,116,112,473,551,11699,211,116,113,480,556,11895,213,117,3502,2166,369,401,1681,1069,475,1552,830,6802,2941,3283,1421,2206,1091,484,522,1239,728,524,505,328,471,732,552,333,523,670,633,2510,1553,404,1456,970,500,1122,772,5147,2773,2534,1447,1712,1048,521,564,1078,758,1099,550,391,497,621,579,3313,2237,398,403,1703,1154,428,1618,887,6622,3103,3397,1592,2298,1187,491,469,1268,695,569,475,339,418,755,502,337,510,675,635,2417,1621,422,1498,1053,498,1178,829,5057,2935,2618,1585,1778,1138,527,561,1100,790,1123,564,398,490,634,585,3340,2808,555,405,1821,1470,335,2074,1110,6652,3370,4028,2040,2779,1470,575,362,1427,607,792,428,414,307,875,391,355,489,693,642,2464,2028,507,1657,1368,526,1488,1054,5105,3275,3080,2010,2123,1432,588,583,1218,886,1251,649,441,494,700,620,6358,5114,4443,2915,6797,5121,2576,2362,3047,336,1098,752,731,766,952,413,465,585,516,11841,503,8579,443,1818094,15869,5977,4816,4219,2770,6405,4891,2467,2250,2898,336,1132,775,754,787,976,419,474,598,527,11305,516,8375,463,1937820,18455,5920,4797,4265,2807,6367,5159,2576,2299,2969,382,1381,946,919,945,1172,495,565,712,631,11787,629,14985,641,3101229,29694,2371,3770,2270,3523,799,1188,1067,1089,1498,1307,1858,844,880,1173,1694,873,910,1208,1737,3877,13687,2478,8645,223,188,193,126,106,109,49706,22653,56946,17,372,812,1444])
]

bins = np.linspace(-3, 3, 10)

i = 0

for data in datas:
    lgd = np.log(data)
    lgd = (lgd - np.mean(lgd))/np.std(lgd)
    # plt.hist(lgd, bins=10, rwidth=0.9, alpha=0.3)
    # plt.hist(lgd, bins, rwidth=0.9, alpha=0.5, density=True)
    color = "C" + str(i)
    # sns.kdeplot(data=lgd, ax=ax, color=color)
    sns.histplot(data=lgd, stat="density", kde=True, color=color, alpha=0.3)
    i += 1

